h1=. MYCrypto

p=. Version 0.1 -- 6 April 2009

p=. By "Jens Alfke":mailto:jens@mooseyard.com <br>
Based in part on code by Wade Tregaskis, <br>
and sample code by Apple Computer.

h2. Introduction

*MYCrypto* is a high-level cryptography API for Mac OS X and iPhone. It's an Objective-C wrapper around the system
"*Keychain*":http://developer.apple.com/documentation/Security/Conceptual/keychainServConcepts/02concepts/concepts.html#//apple_ref/doc/uid/TP30000897-CH204-TP9
and *CSSM* APIs, which are notoriously hard to use, as well as *CommonCrypto*, which is easier but quite limited.

MYCrypto gives you easy object-oriented interfaces to:

* Symmmetric cryptography (session keys and password-based encryption)
* Asymmetric cryptography (public and private keys; digital signatures)
* Cryptographic digests/hashes (effectively-unique IDs for data)
* The Keychain (a secure, encrypted storage system for keys and passwords)

h3. Requirements

* Mac OS X 10.5 or later _[has been tested on 10.5.6]_
* iPhone OS 2.0 or later _[not yet tested; see Limitations section below]_
* iPhone Simulator, for iPhone OS 2.0 or later
* The "MYUtilities":http://mooseyard.com/hg/hgwebdir.cgi/MYUtilities library, which is used by MYCrypto.
* _Some understanding of security and cryptography on your part!_ Even with convenient APIs, cryptographic operations still require care and knowledge to be used safely. There are already too many "examples":http://en.wikipedia.org/wiki/Wired_Equivalent_Privacy#Flaws of insecure systems that were incorrectly assembled from secure primitives; don't add your app to that list. Please read a good overview like "??Practical Cryptography??":http://www.schneier.com/book-practical.html before attempting anything the least bit fancy.

h3. Current Limitations

h4. First off, the biggest caveat of all:

* *MYCrypto 0.1 is new code and has not yet been used in any real projects. Expect bugs.* (I'm talking about my wrapper/glue code. The underlying cryptographic functionality provided by the OS is robust.)

h4. Further issues with the 0.1 release:

* *MYCrypto does not yet work on the iPhone.* It currently builds, but runs into problems at runtime. I'm currently trying to figure these out. (The iPhone OS Security APIs are very different from the Mac OS X ones, and I'm much less familiar with them.) However, it does work in the iPhone Simulator, which uses the OS X APIs.
* Exporting symmetric keys in wrapped (encrypted) form will fail. Currently they can be exported only as raw key data.
* Importing symmetric keys, in any form, will fail ... kind of a deal-breaker for using them across two computers, unfortunately.

h4. Current API limitations, to be remedied in the future:

* No API for accessing passwords; fortunately there are several other utility libraries that provide this. And if your code is doing cryptographic operations, it probably needs to store the keys themselves, not passwords.
* No bulk data encryption/decryption using public/private keys. MYKeyPair only does raw RSA crypto, which is slow and limited to small chunks of data.
* No creating or signing certificate-requests, or creating self-signed certificates.
* No evaluation of trust in certificates (i.e. SecTrust and related APIs.)
* Error reporting is too limited. Most methods indicate an error by returning nil, NULL or NO, but don't provide the standard "out" NSError parameter to provide more information. Expect the API to be refactored in the near future to remedy this.

h2. Overview

The class hierarchy of MYCrypto looks like this:

* "MYKeychainItem":Documentation/html/interfaceMYKeychainItem.html
** "MYKey":Documentation/html/interfaceMYKey.html
*** "*MYSymmetricKey*":Documentation/html/interfaceMYSymmetricKey.html
*** "*MYPublicKey*":Documentation/html/interfaceMYPublicKey.html
*** "*MYPrivateKey*":Documentation/html/interfaceMYPrivateKey.html
*** "*MYCertificate*":Documentation/html/interfaceMYCertificate.html
* "MYDigest":Documentation/html/interfaceMYDigest.html
** "*MYSHA1Digest*":Documentation/html/interfaceMYSHA1Digest.html
** "*MYSHA256Digest*":Documentation/html/interfaceMYSHA256Digest.html
* "MYCryptor":Documentation/html/interfaceMYCryptor.html

(*Boldface* classes are concrete, others are abstract.)

h2. References

* "??Security Overview??":http://developer.apple.com/documentation/Security/Conceptual/Security_Overview/Introduction/Introduction.html (Apple)
* "??Secure Coding Guide??":http://developer.apple.com/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html (Apple)

* "??Common Security: CDSA and CSSM, Version 2??":http://www.opengroup.org/publications/catalog/c914.htm (The Open Group)

* "??Practical Cryptography??":http://www.schneier.com/book-practical.html (Ferguson and Schneier)
* "??Handbook of Applied Cryptography":http://www.cacr.math.uwaterloo.ca/hac/ (Menezes, van Oorschot, Vanstone) -- free download!
* "??The Devil's InfoSec Dictionary??":http://www.csoonline.com/article/220527/The_Devil_s_Infosec_Dictionary (CSO Online)